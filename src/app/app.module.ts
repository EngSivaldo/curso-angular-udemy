// Importamos o decorator @NgModule para criar o m√≥dulo raiz da aplica√ß√£o
import { NgModule } from '@angular/core';

// Importamos BrowserModule, que √© necess√°rio para rodar a aplica√ß√£o Angular no navegador
import { BrowserModule } from '@angular/platform-browser';

// Importamos o m√≥dulo de rotas da aplica√ß√£o
import { AppRoutingModule } from './app-routing.module';

// Importamos o componente principal da aplica√ß√£o
import { AppComponent } from './app.component';

// üîë Importamos o CardsModule
// Isso permite que todos os componentes exportados pelo CardsModule
// fiquem dispon√≠veis para uso dentro dos templates do AppModule
import { CardsModule } from './cards/cards.module';
import { provideAnimationsAsync } from '@angular/platform-browser/animations/async';

// Criamos o m√≥dulo raiz da aplica√ß√£o (AppModule)
// Este m√≥dulo √© o ponto de entrada da aplica√ß√£o Angular.
@NgModule({
  // Aqui declaramos apenas o AppComponent, que √© o componente principal
  declarations: [AppComponent],

  // Aqui importamos os m√≥dulos necess√°rios para o funcionamento da aplica√ß√£o
  imports: [
    BrowserModule, // necess√°rio para rodar no navegador
    AppRoutingModule, // respons√°vel pelas rotas da aplica√ß√£o
    CardsModule, // üîë agora podemos usar <app-card>, <app-card-button>, etc. no AppComponent e em qualquer outro componente do AppModule
  ],

  // Servi√ßos globais da aplica√ß√£o podem ser registrados aqui
  providers: [provideAnimationsAsync()],

  // Define qual componente ser√° carregado primeiro ao iniciar a aplica√ß√£o
  bootstrap: [AppComponent],
})
export class AppModule {}
